@using System.Security.Claims
@model WebTinTuc.Models.Entities.News

@{
    ViewData["Title"] = Model.Title + " - Vietnam codeCore";
    var currentUserId = User.Identity.IsAuthenticated ? int.Parse(User.FindFirst(ClaimTypes.NameIdentifier)?.Value) : (int?)null;
}


<style>
    .opacity-50 {
        opacity: 0.5; /* Làm mờ bình luận chưa duyệt */
    }
</style>

<div class="container mt-4">
    <div class="row">
        <!-- Cột lớn bên trái: Thông tin bài viết -->
        <div class="col-lg-8 mb-4">
            <div class="card">
                <img src="@Model.FullImagePath" class="card-img-top" alt="@Model.Title">
                <div class="card-body">
                    <h1 class="card-title fw-bold">@Model.Title</h1>
                    <p class="text-muted mb-2">
                        <strong>Người đăng:</strong> @Model.User.FullName
                        <small class="ms-2 text-secondary">
                            · @Model.PostedDate.ToString("dd/MM/yyyy HH:mm") · @Model.ViewCount lượt xem
                        </small>
                    </p>
                    <p class="text-muted">@Model.Abstract</p>
                    
                    <hr />
                    <div class="card-text">
                        @Html.Raw(Model.Content) <!-- Hiển thị nội dung HTML nếu có -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Cột vừa bên phải: Bình luận -->
        <div class="col-lg-4 mb-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Bình luận</h5>
                </div>
                <div class="card-body" style="max-height: 500px; overflow-y: auto;">
                    @if (Model.Comments.Any())
                    {
                        @foreach (var comment in Model.Comments)
                        {
                            if (comment.IsApprove || (currentUserId.HasValue && comment.Fk_UserId == currentUserId))
                            {
                                <div class="mb-3 border-bottom pb-2 @(comment.IsApprove ? "" : "opacity-50")" >
                                    <p class="fw-bold mb-1">
                                        @comment.User.FullName
                                        <small class="text-muted">
                                            (@comment.CreatedAt.ToString("dd/MM/yyyy HH:mm"))
                                        </small>
                                        @if (!comment.IsApprove)
                                        {
                                            <span class="badge bg-warning text-dark ms-2">Chờ duyệt</span>
                                        }
                                    </p>
                                    <p class="mb-0">@comment.Content</p>
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <p class="text-muted">Chưa có bình luận nào.</p>
                    }
                </div>
                <!-- Form thêm bình luận (nếu người dùng đăng nhập) -->
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="card-footer">
                        <form asp-action="AddComment" asp-controller="Comment" method="post">
                            <input type="hidden" name="NewId" value="@Model.NewId" />
                            <div class="mb-3">
                                <textarea class="form-control" name="Content" rows="3" placeholder="Viết bình luận của bạn..." required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Gửi bình luận</button>
                        </form>
                    </div>
                }
                else
                {
                    <div class="card-footer text-muted">
                        <p>Vui lòng <a href="@Url.Action("Login", "Account")">đăng nhập</a> để bình luận.</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Nút quay lại -->
    <div class="text-center mt-4">
        <a href="@Url.Action("Index", "Home")" class="btn btn-outline-secondary">Quay lại trang chủ</a>
    </div>

    <!-- tin đã xem gần đây-->
    <div class="mt-5">
        <h4>Tin tức đã xem gần đây</h4>
        <div id="recentNews" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-5 g-3"></div>
    </div>
</div>


@section Scripts {
    <script>
        // Hàm để lưu tin tức đã xem vào Local Storage
        function saveRecentNews(news) {
            let recentNews = JSON.parse(sessionStorage.getItem('recentNews')) || [];
            const existingIndex = recentNews.findIndex(item => item.NewId === news.NewId);
            if (existingIndex !== -1) {
                recentNews.splice(existingIndex, 1);
            }
            recentNews.unshift(news);
            if (recentNews.length > 6) {
                recentNews.pop();
            }
            sessionStorage.setItem('recentNews', JSON.stringify(recentNews));
        }

        // Hàm để hiển thị danh sách tin đã xem
        function displayRecentNews(currentNewId) {
            const recentNews = JSON.parse(sessionStorage.getItem('recentNews')) || [];
            const recentNewsContainer = document.getElementById('recentNews');

            // Xóa nội dung cũ
            recentNewsContainer.innerHTML = '';

            // Nếu không có tin nào ngoài tin hiện tại
            if (recentNews.length === 0 || (recentNews.length === 1 && recentNews[0].NewId === currentNewId)) {
                recentNewsContainer.innerHTML = '<p class="text-muted col-12">Chưa có tin tức nào được xem gần đây.</p>';
                return;
            }

            // Hiển thị các tin đã xem (trừ tin hiện tại)
            recentNews
                .filter(news => news.NewId !== currentNewId) // Loại bỏ tin hiện tại
                .forEach(news => {
                    const newsCard = `
                        <div class="col">
                            <div class="card h-100">
                                <a href="/News/Detail/${news.NewId}">
                                    <img src="${news.FullImagePath}" class="card-img-top" alt="${news.Title}" style="height: 100px; object-fit: cover;">
                                </a>
                                <div class="card-body p-2">
                                    <h6 class="card-title mb-0 style="font-size: 0.9rem; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                        <a href="/News/Detail/${news.NewId}" class="text-decoration-none">${news.Title}</a>
                                    </h6>
                                </div>
                            </div>
                        </div>
                    `;
                    recentNewsContainer.innerHTML += newsCard;
                });
        }

        // Tin tức hiện tại từ Model
        const currentNews = {
            NewId: @Model.NewId,
            Title: "@Model.Title",
            FullImagePath: "@Model.FullImagePath"
        };

        // Lưu tin hiện tại vào Local Storage
        saveRecentNews(currentNews);

        // Hiển thị danh sách tin đã xem
        displayRecentNews(@Model.NewId);
    </script>
}
